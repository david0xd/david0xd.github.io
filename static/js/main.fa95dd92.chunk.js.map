{"version":3,"sources":["util/DocumentSignerService.js","components/AddDocumentByHash.js","components/ManageDocument.js","components/SignDocument.js","components/GetDocument.js","components/About.js","App.js","getWeb3.js","serviceWorker.js","index.js"],"names":["DocumentSignerService","web3","contract","accounts","this","documentHash","documentName","documentDescription","documentHashingAlgorithm","methods","addDocument","send","from","signDocument","address","fullName","description","amountToBePaidInETH","amountToBePaidInWei","utils","toWei","toString","console","log","addSignatory","value","documents","call","getSignatories","signatoryAddress","getSignatoryInformation","getSignatures","eth","getAccounts","accountsUsed","AddDocumentByHash","props","state","documentAdded","showError","errorMessage","documentSignerService","addDocumentHash","e","a","preventDefault","setState","setInterval","message","handleChange","bind","data","target","name","className","Alert","variant","href","rel","Form","onSubmit","Group","controlId","Label","Control","type","placeholder","onChange","Text","Select","Button","Component","ManageDocument","signatoryName","signatoryDescription","amountToBePaid","documentActionSuccessful","onClick","SignDocument","allowedToSign","signatories","getAccountAddress","currentAccount","includes","getDocument","GetDocument","documentOwner","documentTimestamp","documentSignatories","documentSignatures","documentRetrieved","signatoriesRetrieved","signaturesRetrieved","document","dateFormatted","getFormattedDateFromTimestamp","createdAt","owner","algorithm","signatoriesWithInfo","signatory","signatoryInfo","fromWei","push","signedAt","paid","signatures","showSignatories","indexKey","map","s","key","showSignatures","find","timestamp","dateCreated","Date","time","getHours","getMinutes","toLocaleDateString","Table","striped","bordered","hover","length","About","contractAddress","App","pages","currentPage","componentDidMount","connect","handleNavChange","React","createRef","manageDocument","about","connectingWithButton","Promise","resolve","reject","window","ethereum","Web3","enable","provider","providers","HttpProvider","addEventListener","instance","Contract","DocumentSignerContract","abi","options","on","accountChanged","alert","error","current","isConnected","Container","fluid","src","alt","Nav","Item","Link","ref","size","connectWithButton","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fa95dd92.chunk.js","sourcesContent":["/**\n * Use this service to wrap up web3 calls to the smart contract.\n * */\nexport class DocumentSignerService {\n\n    web3 = null;\n    contract = null;\n    accounts = [];\n\n    constructor(web3, contract, accounts) {\n        this.web3 = web3;\n        this.contract = contract;\n        this.accounts = accounts;\n    }\n\n    async addDocument(documentHash, documentName, documentDescription, documentHashingAlgorithm) {\n        return await this.contract.methods.addDocument(\n            documentHash,\n            documentName,\n            documentDescription,\n            documentHashingAlgorithm\n        ).send({ from: this.accounts[0] });\n    }\n\n    async signDocument(documentHash) {\n        return await this.contract.methods.signDocument(\n            documentHash\n        ).send({ from: this.accounts[0] });\n    }\n\n    async addSignatory(documentHash, address, fullName, description, amountToBePaidInETH) {\n        // Handle amount to be paid\n        const amountToBePaidInWei = this.web3.utils.toWei(amountToBePaidInETH.toString(), 'ether');\n        console.log(amountToBePaidInWei);\n\n        return await this.contract.methods.addSignatory(\n            documentHash,\n            address,\n            fullName,\n            description\n        ).send({ from: this.accounts[0], value: amountToBePaidInWei });\n    }\n\n    async getDocument(documentHash) {\n        return await this.contract.methods.documents(documentHash).call();\n    }\n\n    async getSignatories(documentHash) {\n        return await this.contract.methods.getSignatories(documentHash).call();\n    }\n\n    async getSignatoryInformation(documentHash, signatoryAddress) {\n        return await this.contract.methods.getSignatoryInformation(documentHash, signatoryAddress).call();\n    }\n\n    async getSignatures(documentHash) {\n        return await this.contract.methods.getSignatures(documentHash).call();\n    }\n\n    async getAccountAddress() {\n        const accountsUsed = await this.web3.eth.getAccounts();\n        this.accounts = accountsUsed;\n        return accountsUsed[0];\n    }\n\n    async accountChanged() {\n        const accountsUsed = await this.web3.eth.getAccounts();\n        this.accounts = accountsUsed;\n        return accountsUsed[0];\n    }\n}\n","import React, { Component } from \"react\";\nimport { Alert, Button, Form } from \"react-bootstrap\";\n\nexport class AddDocumentByHash extends Component {\n    state = {\n        documentHash: '',\n        documentName: '',\n        documentDescription: '',\n        documentHashingAlgorithm: 'SHA-256',\n        documentAdded: false,\n        showError: false,\n        errorMessage: '',\n    };\n    documentSignerService = null;\n\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n        this.documentSignerService = props.data.documentSignerService;\n    }\n\n    handleChange(e) {\n        this.setState({[e.target.name]: e.target.value});\n    }\n\n    addDocumentHash = async (e) => {\n        e.preventDefault();\n        const {documentHash, documentName, documentDescription, documentHashingAlgorithm} = this.state;\n\n        try {\n            await this.documentSignerService.addDocument(\n                documentHash,\n                documentName,\n                documentDescription,\n                documentHashingAlgorithm\n            );\n            this.setState({\n                documentAdded: true,\n                documentHash: '',\n                documentName: '',\n                documentDescription: '',\n            })\n            setInterval(() => {\n                this.setState({\n                    documentAdded: false\n                })\n            }, 3000)\n        } catch (error) {\n            console.log(error);\n            const errorMessage = error.message;\n            this.setState({\n                showError: true,\n                errorMessage: errorMessage\n            })\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"d-flex justify-content-center align-content-center align-items-center flex-column\">\n                {this.state.documentAdded === true ?\n                    (<Alert variant={\"success\"}>\n                        Document successfully added!\n                    </Alert>) : null\n                }\n                {this.state.showError === true ?\n                    (<Alert variant={\"danger\"}>\n                        <h6>Error occurred while trying to add new document.</h6>\n                        <p>{this.state.errorMessage}</p>\n                    </Alert>) : null\n                }\n                <Alert variant={\"info\"}>\n                    <p>\n                        You can use some of the online tools to hash your document like&nbsp;\n                        <a href=\"https://md5file.com/calculator\" target=\"_blank\" rel=\"noreferrer\">this one</a> or&nbsp;\n                        <a href=\"https://emn178.github.io/online-tools/keccak_256_checksum.html\"\n                           target=\"_blank\"\n                           rel=\"noreferrer\"\n                        >this one</a> or you can use&nbsp;\n                        <a href=\"https://www.npmjs.com/package/hash-files\"\n                           target=\"_blank\"\n                           rel=\"noreferrer\"\n                        >NPM package</a>.\n                    </p>\n                </Alert>\n                <Form className=\"mt-2\" onSubmit={this.addDocumentHash}>\n                    <Form.Group className=\"mb-3\" controlId=\"formDocumentHash\">\n                        <Form.Label>Document hash</Form.Label>\n                        <Form.Control type=\"text\"\n                                      placeholder=\"Paste your document hash here\"\n                                      name=\"documentHash\"\n                                      value={this.state.documentHash}\n                                      onChange={this.handleChange}\n                        />\n                        <Form.Text className=\"text-custom-info\">\n                            Advice: Use SHA256 algorithm to hash your documents!\n                        </Form.Text>\n                    </Form.Group>\n                    <Form.Group className=\"mb-3\" controlId=\"formDocumentName\">\n                        <Form.Label>Document name</Form.Label>\n                        <Form.Control type=\"text\"\n                                      placeholder=\"Add name of your document here\"\n                                      name=\"documentName\"\n                                      value={this.state.documentName}\n                                      onChange={this.handleChange}\n                        />\n                        <Form.Text className=\"text-custom-info\">\n                            Adding document name is recommended since it's stored on-chain and can\n                            help you identify and manage your documents later.\n                        </Form.Text>\n                    </Form.Group>\n                    <Form.Group className=\"mb-3\" controlId=\"formDocumentDescription\">\n                        <Form.Label>Document name</Form.Label>\n                        <Form.Control type=\"text\"\n                                      placeholder=\"Add description of your document here\"\n                                      name=\"documentDescription\"\n                                      value={this.state.documentDescription}\n                                      onChange={this.handleChange}\n                        />\n                        <Form.Text className=\"text-custom-info\">\n                            Optionally, add description of your document.\n                        </Form.Text>\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Algorithm used</Form.Label>\n                        <Form.Select aria-label=\"Hashing algorithm selection\"\n                                     name=\"documentAlgorithm\"\n                                     value={this.state.documentHashingAlgorithm}\n                                     onChange={this.handleChange}\n                        >\n                            <option value=\"SHA-256\">SHA-256 (recommended)</option>\n                            <option value=\"SHA-1\">SHA-1</option>\n                            <option value=\"SHA-384\">SHA-384</option>\n                            <option value=\"SHA-512\">SHA-512</option>\n                            <option value=\"MD5\">MD5</option>\n                            <option value=\"KECCAK-256\">Keccak-256</option>\n                            <option value=\"KECCAK-384\">Keccak-384</option>\n                            <option value=\"KECCAK-512\">Keccak-512</option>\n                        </Form.Select>\n                        <Form.Text className=\"text-custom-info\">\n                            Choose the algorithm you file is hashed with to help it's later verification.\n                        </Form.Text>\n                    </Form.Group>\n                    <Button variant=\"success\" type=\"submit\" className=\"mt-2\">Add document hash</Button>\n                </Form>\n            </div>\n        );\n    }\n}\n","import React, { Component } from \"react\";\nimport { Alert, Button, Form } from \"react-bootstrap\";\n\nexport class ManageDocument extends Component {\n    state = {\n        documentHash: '',\n        signatoryAddress: '',\n        signatoryName: '',\n        signatoryDescription: '',\n        amountToBePaid: 0,\n        documentActionSuccessful: false,\n        showError: false,\n        errorMessage: '',\n    };\n    documentSignerService = null;\n\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n        this.documentSignerService = props.data.documentSignerService;\n    }\n\n    handleChange(e) {\n        this.setState({[e.target.name]: e.target.value});\n    }\n\n    addSignatory = async (e) => {\n        e.preventDefault();\n        this.setState({\n            showError: false\n        })\n\n        try {\n            await this.documentSignerService.addSignatory(\n                this.state.documentHash,\n                this.state.signatoryAddress,\n                this.state.signatoryName,\n                this.state.signatoryDescription,\n                this.state.amountToBePaid\n            );\n            this.setState({\n                signatoryAddress: '',\n                signatoryName: '',\n                signatoryDescription: '',\n                documentActionSuccessful: true\n            })\n\n            setInterval(() => {\n                this.setState({\n                    documentActionSuccessful: false\n                })\n            }, 3000)\n        } catch (error) {\n            console.log(error);\n            const errorMessage = error.message;\n            this.setState({\n                showError: true,\n                errorMessage: errorMessage\n            })\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"d-flex justify-content-center align-content-center align-items-center flex-column\">\n                {this.state.documentActionSuccessful === true ?\n                    (<Alert variant={\"success\"}>\n                        Document action executed successfully!\n                    </Alert>) : null\n                }\n                {this.state.showError === true ?\n                    (<Alert variant={\"danger\"}>\n                        <h6>Error occurred while trying to perform action over document.</h6>\n                        <p>{this.state.errorMessage}</p>\n                    </Alert>) : null\n                }\n                <Form className=\"mt-2\">\n                    <Form.Group className=\"mb-3\" controlId=\"formDocumentHash\">\n                        <Form.Label>Document hash</Form.Label>\n                        <Form.Control type=\"text\"\n                                      placeholder=\"Paste your document hash here\"\n                                      name=\"documentHash\"\n                                      value={this.state.documentHash}\n                                      onChange={this.handleChange}\n                                      className=\"document-hash-input\"\n                        />\n                    </Form.Group>\n                    <Form.Group className=\"mb-3\" controlId=\"formSignatoryAddress\">\n                        <Form.Label>Signatory address</Form.Label>\n                        <Form.Control type=\"text\"\n                                      placeholder=\"Paste signatory address here\"\n                                      name=\"signatoryAddress\"\n                                      value={this.state.signatoryAddress}\n                                      onChange={this.handleChange}\n                                      className=\"document-hash-input\"\n                        />\n                    </Form.Group>\n                    <Form.Group className=\"mb-3\" controlId=\"formSignatoryName\">\n                        <Form.Label>Signatory name</Form.Label>\n                        <Form.Control type=\"text\"\n                                      placeholder=\"Enter signatory full name\"\n                                      name=\"signatoryName\"\n                                      value={this.state.signatoryName}\n                                      onChange={this.handleChange}\n                                      className=\"document-hash-input\"\n                        />\n                    </Form.Group>\n                    <Form.Group className=\"mb-3\" controlId=\"formSignatoryDescription\">\n                        <Form.Label>Signatory description</Form.Label>\n                        <Form.Control type=\"text\"\n                                      placeholder=\"Enter signatory description or signing reason\"\n                                      name=\"signatoryDescription\"\n                                      value={this.state.signatoryDescription}\n                                      onChange={this.handleChange}\n                                      className=\"document-hash-input\"\n                        />\n                    </Form.Group>\n                    <Form.Group className=\"mb-3\" controlId=\"formSignatoryAmount\">\n                        <Form.Label>Amount of ETH to send</Form.Label>\n                        <Form.Control type=\"text\"\n                                      placeholder=\"Enter the amount of ETH to be sent to the contract.\"\n                                      name=\"amountToBePaid\"\n                                      value={this.state.amountToBePaid}\n                                      onChange={this.handleChange}\n                                      className=\"document-hash-input\"\n                        />\n                        <Form.Text className=\"text-custom-info\">\n                            Once signatory sign the document, the amount will be transferred to their account.\n                        </Form.Text>\n                    </Form.Group>\n                    <Button variant=\"success\" type=\"button\" onClick={this.addSignatory}>Add Signatory</Button>\n                </Form>\n            </div>\n        );\n    }\n}\n","import React, { Component } from \"react\";\nimport {Alert, Button, Form} from \"react-bootstrap\";\n\nexport class SignDocument extends Component {\n    state = {\n        documentHash: '',\n        documentName: '',\n        documentDescription: '',\n        documentActionSuccessful: false,\n        showError: false,\n        errorMessage: '',\n    };\n    documentSignerService = null;\n\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n        this.documentSignerService = props.data.documentSignerService;\n    }\n\n    handleChange(e) {\n        this.setState({[e.target.name]: e.target.value});\n    }\n\n    signDocument = async (e) => {\n        // Reset potential errors\n        this.setState({\n            showError: false,\n            errorMessage: ''\n        })\n\n        // Get signatories to see if the user is allowed to sign the specified document\n        let allowedToSign = false;\n        try {\n            const signatories = await this.documentSignerService.getSignatories(this.state.documentHash);\n            const currentAccount = await this.documentSignerService.getAccountAddress();\n            allowedToSign = signatories.includes(currentAccount);\n        } catch (error) {\n            const errorMessage = error.message;\n            this.setState({\n                showError: true,\n                errorMessage: errorMessage\n            })\n        }\n\n        if (allowedToSign) {\n            try {\n                await this.documentSignerService.signDocument(this.state.documentHash);\n\n                this.setState({\n                    documentActionSuccessful: true\n                })\n\n                setInterval(() => {\n                    this.setState({\n                        documentActionSuccessful: false\n                    })\n                }, 3000)\n            } catch (error) {\n                console.log(error);\n                const errorMessage = error.message;\n                this.setState({\n                    showError: true,\n                    errorMessage: errorMessage\n                })\n            }\n        } else {\n            const errorMessage = 'Your account is not in signatory list. You are not allowed to sign this document.';\n            this.setState({\n                showError: true,\n                errorMessage: errorMessage\n            })\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"d-flex justify-content-center align-content-center align-items-center flex-column\">\n                {this.state.documentActionSuccessful === true ?\n                    (<Alert variant={\"success\"}>\n                        Document signed successfully!\n                    </Alert>) : null\n                }\n                {this.state.showError === true ?\n                    (<Alert variant={\"danger\"}>\n                        <h6>Error occurred while trying to perform action over document.</h6>\n                        <p>{this.state.errorMessage}</p>\n                    </Alert>) : null\n                }\n                <Form className=\"mt-2\" onSubmit={this.getDocument}>\n                    <Form.Group className=\"mb-3\" controlId=\"formDocumentHash\">\n                        <Form.Label>Document hash</Form.Label>\n                        <Form.Control type=\"text\"\n                                      placeholder=\"Paste your document hash here\"\n                                      name=\"documentHash\"\n                                      value={this.state.documentHash}\n                                      onChange={this.handleChange}\n                                      className=\"document-hash-input\"\n                        />\n                    </Form.Group>\n                    <Button variant=\"success\" type=\"button\" onClick={this.signDocument}>Sign Document</Button>\n                </Form>\n            </div>\n        );\n    }\n}\n","import React, { Component } from \"react\";\nimport { Alert, Button, Form, Table } from \"react-bootstrap\";\n\nexport class GetDocument extends Component {\n    state = {\n        documentHash: '',\n        documentName: '',\n        documentDescription: '',\n        documentOwner: '',\n        documentHashingAlgorithm: '',\n        documentTimestamp: '',\n        documentSignatories: [],\n        documentSignatures: [],\n        documentRetrieved: false,\n        signatoriesRetrieved: false,\n        signaturesRetrieved: false,\n        showError: false,\n        errorMessage: '',\n    };\n    documentSignerService = null;\n\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n        this.documentSignerService = props.data.documentSignerService;\n    }\n\n    handleChange(e) {\n        this.setState({\n            [e.target.name]: e.target.value,\n            documentRetrieved: false,\n            signatoriesRetrieved: false,\n            signaturesRetrieved: false,\n            documentSignatories: [],\n            documentSignatures: []\n        });\n    }\n\n    getDocument = async (e) => {\n        e.preventDefault();\n\n        // Reset initial states\n        this.setState({\n            documentName: '',\n            documentDescription: '',\n            documentOwner: '',\n            documentHashingAlgorithm: '',\n            documentTimestamp: '',\n            documentRetrieved: false,\n            signatoriesRetrieved: false,\n            documentSignatories: [],\n            signaturesRetrieved: false,\n            documentSignatures: []\n        })\n\n        const document = await this.documentSignerService.getDocument(this.state.documentHash);\n\n        // Manage timestamp\n        // const dateCreated = new Date(document.createdAt * 1000);\n        // const time = dateCreated.getHours() + ':' + dateCreated.getMinutes();\n        // const dateFormatted = dateCreated.toLocaleDateString(\"en-US\") + ' - ' + time + 'h';\n        const dateFormatted = this.getFormattedDateFromTimestamp(document.createdAt);\n\n        this.setState({\n            documentName: document.name,\n            documentDescription: document.description,\n            documentOwner: document.owner,\n            documentHashingAlgorithm: document.algorithm,\n            documentTimestamp: dateFormatted,\n            documentRetrieved: true\n        })\n\n        const signatories = await this.documentSignerService.getSignatories(this.state.documentHash);\n        const signatoriesWithInfo = [];\n        for (let signatory of signatories) {\n            const signatoryInfo = await this.documentSignerService\n                .getSignatoryInformation(this.state.documentHash, signatory)\n            const amountToBePaidInETH = this.documentSignerService.web3.utils.fromWei(signatoryInfo[3]);\n            signatoriesWithInfo.push({\n                address: signatory,\n                name: signatoryInfo[0],\n                description: signatoryInfo[1],\n                signedAt: signatoryInfo[2],\n                amountToBePaid: amountToBePaidInETH,\n                paid: signatoryInfo[4],\n            });\n        }\n        console.log(signatoriesWithInfo)\n\n        this.setState({\n            signatoriesRetrieved: true,\n            documentSignatories: signatoriesWithInfo\n        })\n\n        const signatures = await this.documentSignerService.getSignatures(this.state.documentHash);\n        this.setState({\n            signaturesRetrieved: true,\n            documentSignatures: signatures\n        })\n    }\n\n    getFormattedDateFromTimestamp(timestamp) {\n        const dateCreated = new Date(timestamp * 1000);\n        const time = dateCreated.getHours() + ':' + dateCreated.getMinutes();\n        return dateCreated.toLocaleDateString(\"en-US\") + ' - ' + time + 'h';\n    }\n\n    showSignatories = () => {\n        let indexKey = 0;\n\n        return this.state.documentSignatories.map(s => {\n            indexKey++;\n            return (<tr key={ s + indexKey }>\n                <td>{ s.name }</td>\n                <td>{ s.description }</td>\n                <td>{ s.address }</td>\n                <td>{ s.amountToBePaid } ETH</td>\n                <td>{ s.paid === true ? 'Yes' : 'No' }</td>\n            </tr>)\n        });\n    }\n\n    showSignatures = () => {\n        let indexKey = 0;\n\n        return this.state.documentSignatures.map(s => {\n            if (s !== '0x0000000000000000000000000000000000000000') {\n                indexKey++;\n                const signatoryInfo = this.state.documentSignatories.find(signatory => signatory.address === s);\n\n                return (<tr key={ s + indexKey }>\n                    <td>{ signatoryInfo.name }</td>\n                    <td>{ signatoryInfo.description }</td>\n                    <td>{ s }</td>\n                    <td>{ this.getFormattedDateFromTimestamp(signatoryInfo.signedAt) }</td>\n                </tr>)\n            } else {\n                console.log('Show signatures: Skipping 0x0000000000000000000000000000000000000000 address.');\n            }\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"d-flex justify-content-center align-content-center align-items-center flex-column\">\n                {this.state.showError === true ?\n                    (<Alert variant={\"danger\"}>\n                        <h6>Error occurred while trying to perform action over document.</h6>\n                        <p>{this.state.errorMessage}</p>\n                    </Alert>) : null\n                }\n                <Form className=\"mt-2\" onSubmit={this.getDocument}>\n                    <Form.Group className=\"mb-3\" controlId=\"formDocumentHash\">\n                        <Form.Label>Document hash</Form.Label>\n                        <Form.Control type=\"text\"\n                                      placeholder=\"Paste your document hash here\"\n                                      name=\"documentHash\"\n                                      value={this.state.documentHash}\n                                      onChange={this.handleChange}\n                                      className=\"document-hash-input\"\n                        />\n                    </Form.Group>\n                    <Button variant=\"success\" type=\"submit\">Get document info</Button>\n                </Form>\n                {this.state.documentRetrieved ? (<h3 className=\"mt-4\">Basic document information</h3>) : null }\n                {this.state.documentRetrieved === true ?\n                    (<Table striped bordered hover variant=\"dark\" className=\"mt-2\">\n                        <tbody>\n                        <tr>\n                            <td className=\"dark-color\"><b>Hash</b></td>\n                            <td>{this.state.documentHash}</td>\n                        </tr>\n                        <tr>\n                            <td className=\"dark-color\"><b>Name</b></td>\n                            <td>{this.state.documentName}</td>\n                        </tr>\n                        <tr>\n                            <td className=\"dark-color\"><b>Description</b></td>\n                            <td>{this.state.documentDescription}</td>\n                        </tr>\n                        <tr>\n                            <td className=\"dark-color\"><b>Owner address</b></td>\n                            <td>{this.state.documentOwner}</td>\n                        </tr>\n                        <tr>\n                            <td className=\"dark-color\"><b>Hashing algorithm</b></td>\n                            <td>{this.state.documentHashingAlgorithm}</td>\n                        </tr>\n                        <tr>\n                            <td className=\"dark-color\"><b>Created at</b></td>\n                            <td>{this.state.documentTimestamp}</td>\n                        </tr>\n                        </tbody>\n                    </Table>) : null\n                }\n                {\n                    this.state.documentSignatories && (this.state.documentSignatories.length > 0) ?\n                        <h4 className=\"mt-2\">Added signatories</h4>\n                        : null\n                }\n                { this.state.signatoriesRetrieved && (this.state.documentSignatories.length > 0) ?\n                    (<Table striped bordered hover variant=\"dark\" className=\"mt-2\">\n                        <thead>\n                        <tr>\n                            <th>Signatory name</th>\n                            <th>Signatory description</th>\n                            <th>Signatory address</th>\n                            <th>Amount to be paid</th>\n                            <th>Paid</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        { this.showSignatories() }\n                        </tbody>\n                    </Table>) : null\n                }\n                {\n                    this.state.signaturesRetrieved && (this.state.documentSignatures.length > 0) ?\n                        <h4 className=\"mt-2\">Signatures</h4>\n                        : null\n                }\n                { this.state.signaturesRetrieved && (this.state.documentSignatures.length > 0) ?\n                        (<Table striped bordered hover variant=\"dark\" className=\"mt-2\">\n                            <thead>\n                                <tr>\n                                    <th>Signatory name</th>\n                                    <th>Signatory description</th>\n                                    <th>Signatory address</th>\n                                    <th>Signed at</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                            { this.showSignatures() }\n                            </tbody>\n                        </Table>) : null\n                }\n\n            </div>\n        );\n    }\n}\n","import React, { Component } from \"react\";\n\nexport class About extends Component {\n    state = {};\n\n    render() {\n        return (\n            <div className=\"d-flex justify-content-center align-content-center align-items-center flex-column\">\n                <h2>Write something about Blockchain Document Signer here...</h2>\n            </div>\n        );\n    }\n}\n","import React, { Component } from \"react\";\nimport DocumentSignerContract from \"./contracts/DocumentSigner.json\";\nimport { getWeb3, getWeb3Directly } from \"./getWeb3\";\n\nimport \"./App.css\";\nimport { Button, Container, Nav } from \"react-bootstrap\";\nimport { DocumentSignerService } from \"./util/DocumentSignerService\";\nimport { AddDocumentByHash } from \"./components/AddDocumentByHash\";\nimport { ManageDocument } from \"./components/ManageDocument\";\nimport { SignDocument } from \"./components/SignDocument\";\nimport { GetDocument } from \"./components/GetDocument\";\nimport { About } from \"./components/About\";\n\nconst contractAddress = '0xb305B37aA206f234012fd7587F9Af83E907a25e0';\n\nclass App extends Component {\n  pages = null;\n  state = {\n    web3: null,\n    accounts: null,\n    contract: null,\n    documentSignerService: null,\n    currentPage: 'addDocument'\n  };\n\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleNavChange = this.handleNavChange.bind(this);\n    this.pages = {\n      addDocument: React.createRef(),\n      manageDocument: React.createRef(),\n      signDocument: React.createRef(),\n      getDocument: React.createRef(),\n      about: React.createRef()\n    }\n  }\n\n  componentDidMount = async () => {\n    await this.connect();\n  };\n\n  async connect(connectingWithButton) {\n    console.log('Connecting...');\n    try {\n      // Get network provider and web3 instance.\n      let web3;\n      if (connectingWithButton) {\n        web3 = await getWeb3Directly();\n      } else {\n        web3 = await getWeb3();\n      }\n\n      // Get the contract instance.\n      // const networkId = await web3.eth.net.getId();\n      // const deployedNetwork = DocumentSignerContract.networks[networkId];\n      const instance = new web3.eth.Contract(DocumentSignerContract.abi, contractAddress);\n      instance.options.address = contractAddress;\n\n      // Use web3 to get the user's accounts.\n      const accounts = await web3.eth.getAccounts();\n\n      // Instantiate document signer service\n      const documentSignerService = new DocumentSignerService(web3, instance, accounts);\n\n      // Set web3, accounts, and contract to the state, and then proceed with an\n      // example of interacting with the contract's methods.\n      this.setState({ web3, contract: instance, accounts, documentSignerService });\n\n      // detect Metamask account change\n      window.ethereum.on('accountsChanged', async (accounts) => {\n        await this.state.documentSignerService.accountChanged();\n        this.setState({ accounts });\n      });\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n          `Failed to load web3, accounts, or contract. Check console for details.`,\n      );\n      console.error(error);\n    }\n  }\n\n  async connectWithButton() {\n    await this.connect(true);\n  }\n\n  handleChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  handleNavChange(e) {\n    this.pages.addDocument.current.className = 'nav-link';\n    this.pages.manageDocument.current.className = 'nav-link';\n    this.pages.signDocument.current.className = 'nav-link';\n    this.pages.getDocument.current.className = 'nav-link';\n    this.pages.about.current.className = 'nav-link';\n    e.target.className = 'nav-link nav-active';\n    this.setState({ currentPage: e.target.name });\n  }\n\n  isConnected() {\n    return !!(this.state.accounts && this.state.accounts.length > 0);\n  }\n\n  render() {\n    if (!this.isConnected()) {\n      return (\n          <div className=\"App\">\n            <Container fluid>\n              <div className=\"d-flex justify-content-center align-content-center align-items-center flex-column pb-4\">\n                <h2 className=\"mb-2 mt-4\">To begin, connect your wallet!</h2>\n                <Button variant=\"success\"\n                        size=\"lg\"\n                        type=\"button\"\n                        className=\"mt-3\"\n                        onClick={ this.connectWithButton.bind(this) }>\n                  Connect\n                </Button>\n              </div>\n            </Container>\n          </div>\n      );\n    }\n    return (\n      <div className=\"App\">\n        <Container fluid>\n          <img src=\"logo.png\" alt=\"Logo\" className=\"logo mt-4 mb-2\" />\n          {this.state.accounts && this.state.accounts.length > 0 ?\n            <p className=\"mt-2 mb-2\">Connected with account: <b>{ this.state.accounts[0] }</b> </p> : null\n          }\n          <Nav className=\"justify-content-center mt-3 mb-3 text-light\">\n            <Nav.Item>\n              <Nav.Link onClick={this.handleNavChange} ref={this.pages.addDocument} name=\"addDocument\" className=\"nav-active\">\n                Add Document\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link onClick={this.handleNavChange} ref={this.pages.manageDocument} name=\"manageDocument\">\n                Manage Document\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link onClick={this.handleNavChange} ref={this.pages.signDocument} name=\"signDocument\">\n                Sign Document\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link onClick={this.handleNavChange} ref={this.pages.getDocument} name=\"getDocument\">\n                Document Information\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link onClick={this.handleNavChange} ref={this.pages.about} name=\"about\">\n                About\n              </Nav.Link>\n            </Nav.Item>\n          </Nav>\n          <div className=\"d-flex justify-content-center align-content-center align-items-center flex-column pb-4\">\n            {this.state.currentPage === 'addDocument' ?\n              <AddDocumentByHash data={{documentSignerService: this.state.documentSignerService}}/> : null\n            }\n            {this.state.currentPage === 'manageDocument' ?\n                <ManageDocument data={{documentSignerService: this.state.documentSignerService}}/> : null\n            }\n            {this.state.currentPage === 'signDocument' ?\n                <SignDocument data={{documentSignerService: this.state.documentSignerService}}/> : null\n            }\n            {this.state.currentPage === 'getDocument' ?\n                <GetDocument data={{documentSignerService: this.state.documentSignerService}}/> : null\n            }\n            {this.state.currentPage === 'about' ?\n                <About data={{documentSignerService: this.state.documentSignerService}}/> : null\n            }\n          </div>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import Web3 from \"web3\";\n\nconst getWeb3 = () =>\n  new Promise((resolve, reject) => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    window.addEventListener(\"load\", async () => {\n      // Modern dapp browsers...\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n          // Request account access if needed\n          await window.ethereum.enable();\n          // Accounts now exposed\n          resolve(web3);\n        } catch (error) {\n          reject(error);\n        }\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {\n        // Use Mist/MetaMask's provider.\n        const web3 = window.web3;\n        console.log(\"Injected web3 detected.\");\n        resolve(web3);\n      }\n      // Fallback to localhost; use dev console port by default...\n      else {\n        const provider = new Web3.providers.HttpProvider(\n          \"http://127.0.0.1:8545\"\n        );\n        const web3 = new Web3(provider);\n        console.log(\"No web3 instance injected, using Local web3.\");\n        resolve(web3);\n      }\n    });\n  });\n\nconst getWeb3Directly = () =>\n    new Promise(async (resolve, reject) => {\n        // Modern dapp browsers...\n        if (window.ethereum) {\n          const web3 = new Web3(window.ethereum);\n          try {\n            // Request account access if needed\n            await window.ethereum.enable();\n            // Accounts now exposed\n            resolve(web3);\n          } catch (error) {\n            reject(error);\n          }\n        }\n        // Legacy dapp browsers...\n        else if (window.web3) {\n          // Use Mist/MetaMask's provider.\n          const web3 = window.web3;\n          console.log(\"Injected web3 detected.\");\n          resolve(web3);\n        }\n        // Fallback to localhost; use dev console port by default...\n        else {\n          const provider = new Web3.providers.HttpProvider(\n              \"http://127.0.0.1:8545\"\n          );\n          const web3 = new Web3(provider);\n          console.log(\"No web3 instance injected, using Local web3.\");\n          resolve(web3);\n        }\n    });\n\nexport { getWeb3, getWeb3Directly };\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}